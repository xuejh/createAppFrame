<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>viewControllerHeaderFileString</key>
	<string>//
//  [FileName-WaitForReplaced]ViewController.h
//  AppFramework
//
//  Created by xuejinhui 
//  Copyright © 2018年 nd. All rights reserved.
//

#import &lt;UIKit/UIKit.h&gt;

@interface [FileName-WaitForReplaced]ViewController : UIViewController

@end</string>
	<key>viewControllerMFileString</key>
	<string>//
//  [FileName-WaitForReplaced]ViewController.m
//  AppFramework
//
//  Created by xuejinhui 
//  Copyright © 2018年 nd. All rights reserved.
//

#import &quot;[FileName-WaitForReplaced]ViewController.h&quot;
#import &quot;[FileName-WaitForReplaced]TableViewCoordinator.h&quot;
#import &quot;UIResponder+Router.h&quot;
#import &quot;UIView+Context.h&quot;
#import &quot;[FileName-WaitForReplaced]Context.h&quot;

@interface [FileName-WaitForReplaced]ViewController ()
@property (nonatomic, strong) [FileName-WaitForReplaced]TableViewCoordinator *tableViewCD;
@end

@implementation [FileName-WaitForReplaced]ViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    self.view.context = [[[FileName-WaitForReplaced]Context alloc] initWithViewController:self];
    
    // Do any additional setup after loading the view.
    [self installSubModule];
    
    
}

- (void)installSubModule {
    [self installTableViewModule];
}

- (void)installTableViewModule {
    UITableView *tableView = [[UITableView alloc] initWithFrame:CGRectMake(0, self.view.frame.origin.y, self.view.frame.size.width, self.view.frame.size.height)];
    tableView.tableFooterView = [[UIView alloc] init];
    tableView.backgroundColor = [UIColor clearColor];
    tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    [self.view addSubview:tableView];
    
    self.tableViewCD = [[[FileName-WaitForReplaced]TableViewCoordinator alloc] initWithTableView:tableView];
}



- (void)routeEvent:(NSString *)eventName userInfo:(NSDictionary *)userInfo {
    //拦截事件
    
}
@end
</string>
	<key>contextHeaderFileString</key>
	<string>//
//  [FileName-WaitForReplaced]Context.h
//  AppFramework
//
//  Created by xuejinhui 
//  Copyright © 2018年 nd. All rights reserved.
//

#import &lt;UIKit/UIKit.h&gt;
#import &quot;UIView+Context.h&quot;



@interface [FileName-WaitForReplaced]Context : NSObject &lt;UIViewContextProtocol&gt;



@end
</string>
	<key>contextMFileString</key>
	<string>//
//  [FileName-WaitForReplaced]Context.m
//  AppFramework
//
//  Created by xuejinhui 
//  Copyright © 2018年 nd. All rights reserved.
//

#import &quot;[FileName-WaitForReplaced]Context.h&quot;

@interface [FileName-WaitForReplaced]Context ()
@property(nonatomic, weak) UIViewController *controller;
@end
@implementation [FileName-WaitForReplaced]Context
- (instancetype)initWithViewController:(UIViewController *)controller {
    if (self=[super init]) {
        self.controller = controller;
    }
    
    return self;
}
@end</string>
	<key>tableViewCoordinaterHeaderFileString</key>
	<string></string>
	<key>tableViewCoordinaterMFileString</key>
	<string></string>
	<key>tableViewModelHeaderFileString</key>
	<string>//
//  [FileName-WaitForReplaced]TableViewModel.h
//  AppFramework
//
//  Created by xuejinhui 
//  Copyright © 2018年 nd. All rights reserved.
//

#import &lt;Foundation/Foundation.h&gt;

@class [FileName-WaitForReplaced]CellViewModel;
@interface [FileName-WaitForReplaced]TableViewModel : NSObject
@property (nonatomic, strong, readonly) NSArray&lt;[FileName-WaitForReplaced]CellViewModel *&gt; *cellViewModelList;  //Model
- (void)fetchData;
@end
</string>
	<key>tableViewModelMFileString</key>
	<string>//
//  [FileName-WaitForReplaced]TableViewModel.m
//  AppFramework
//
//  Created by xuejinhui 
//  Copyright © 2018年 nd. All rights reserved.
//

#import &quot;[FileName-WaitForReplaced]TableViewModel.h&quot;
#import &quot;[ModelName-WaitForReplaced].h&quot;
#import &quot;[FileName-WaitForReplaced]CellViewModel.h&quot;

@interface [FileName-WaitForReplaced]TableViewModel ()
@property (nonatomic, strong) NSArray&lt;[FileName-WaitForReplaced]CellViewModel *&gt; *cellViewModelList;  //Model
@end
@implementation [FileName-WaitForReplaced]TableViewModel
- (void)fetchData {
    
    
}

- (NSArray *)convertToCellViewModels:(NSArray&lt;[ModelName-WaitForReplaced] *&gt; *)array {
    
    NSMutableArray *cellVMArray = [NSMutableArray array];
    for (int i=0; i&lt;[array count]; i++) {
        [ModelName-WaitForReplaced] *model = array[i];
        [FileName-WaitForReplaced]CellViewModel *cellViewModel = [[FileName-WaitForReplaced]TableViewModel createCellViewModel:model];
        
        [cellVMArray addObject:cellViewModel];
    }
    return cellVMArray;
}

- (NSArray&lt;[ModelName-WaitForReplaced] *&gt; *)fetchDataList {
    
}

+ ([FileName-WaitForReplaced]CellViewModel *)createCellViewModel:([ModelName-WaitForReplaced] *)model {
    [FileName-WaitForReplaced]CellViewModel *cellViewModel = [[[FileName-WaitForReplaced]CellViewModel alloc] initWithModel:model];
    
    return cellViewModel;
}
@end
</string>
	<key>cellViewHeaderFileString</key>
	<string>//
//  [FileName-WaitForReplaced]CellView.h
//  AppFramework
//
//  Created by xuejinhui 
//  Copyright © 2018年 nd. All rights reserved.
//

#import &lt;UIKit/UIKit.h&gt;



@interface [FileName-WaitForReplaced]CellView : UITableViewCell

[PropertiesList-WaitForReplaced]

@end
</string>
	<key>cellViewMFileString</key>
	<string>//
//  [FileName-WaitForReplaced]CellView.m
//  AppFramework
//
//  Created by xuejinhui 
//  Copyright © 2018年 nd. All rights reserved.
//

#import &quot;[FileName-WaitForReplaced]CellView.h&quot;

@interface [FileName-WaitForReplaced]CellView ()

@end
@implementation [FileName-WaitForReplaced]CellView

- (instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString *)reuseIdentifier {
    self = [super initWithStyle:style reuseIdentifier:reuseIdentifier];
    if (self) {
        [self initSubViews];
    }
    return self;
}

- (void)initSubViews {
    
}




[PropertiesList-WaitForReplaced]


@end
</string>
	<key>cellViewModelHeaderFileString</key>
	<string></string>
	<key>cellViewModelMFileString</key>
	<string></string>
	<key>cellCoordinaterHeaderFileString</key>
	<string></string>
	<key>cellCoordinaterMFileString</key>
	<string></string>
</dict>
</plist>
